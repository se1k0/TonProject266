#include "errors.func";

() assert_sender!(slice sender, slice required_address) impure inline {
  throw_unless(error::wrong_sender, equal_slice_bits(sender, required_address));
}

global int state;
global int halted?;
const int state::HALTED = 0xff;

() assert_not_halted!() impure inline {
  throw_if(error::halted, halted?);
}

() assert_state!(int expected) impure inline {
  throw_unless(error::wrong_state, state == expected);
}
() assert_1of2_state!(int expected1, int expected2) impure inline {
  throw_unless(error::wrong_state, (state == expected1) | (state == expected2));
}
